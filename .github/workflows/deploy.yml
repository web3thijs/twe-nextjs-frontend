name: Vercel Deployment
env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
on:
  push:
    branches:
      - main
      - release/*
      - feature/*
      - bugfix/*
jobs:  
  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest
    if: ${{ github.ref != 'refs/heads/main' || github.ref != 'refs/heads/release/*' || github.ref != 'refs/heads/bugfix/*' }}
    steps:
      - uses: actions/checkout@v3

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
 
  eslint:
    name: ESLint
    runs-on: ubuntu-latest
    if: ${{ github.ref != 'refs/heads/main' || github.ref != 'refs/heads/release/*' || github.ref != 'refs/heads/bugfix/*' }}
    steps:
      - uses: actions/checkout@v3

      - name: Install modules
        run: yarn
        
      - name: Run ESLint
        run: yarn eslint . --ext .js,.jsx,.ts,.tsx


  # owasp:
  #   name: OWASP Dependency Check
  #   runs-on: ubuntu-latest
  #   if: ${{ github.ref != 'refs/heads/main' || github.ref != 'refs/heads/release/*' || github.ref != 'refs/heads/bugfix/*' }}
  #   steps:      
  #     - uses: actions/checkout@v3

  #     - name: OWASP Dependency-Check
  #       uses: dependency-check/Dependency-Check_Action@main
  #       with:
  #         project: "test"
  #         path: "."
  #         format: "ALL"
  #         args: >
  #           --failOnCVSS 7
  #           --enableRetired

  #     - name: Upload OWASP Dependency-Check results
  #       if: always()
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: Depcheck report
  #         path: ${{github.workspace}}/reports
        
  build_and_deploy:
    name: Build and deploy
    needs: ['sonarcloud', 'eslint']
    runs-on: ubuntu-latest
    steps:
      - name: Set BUILD_TYPE environment variable
        run: echo "BUILD_TYPE=$(if [[ $GITHUB_REF == 'refs/heads/main' || $GITHUB_REF == refs/heads/release/* || $GITHUB_REF == refs/heads/bugfix/* ]]; then echo 'production'; else echo 'preview'; fi)" >> $GITHUB_ENV

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=${{ env.BUILD_TYPE }} --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project Artifacts
        run: vercel build ${{ env.BUILD_TYPE == 'production' && '--prod' || '' }} --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt ${{ env.BUILD_TYPE == 'production' && '--prod' || '' }} --token=${{ secrets.VERCEL_TOKEN }}
